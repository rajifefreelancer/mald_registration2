import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';

class FirestoreDatabase {
  // current loged in user
  User? user = FirebaseAuth.instance.currentUser;

  // get collection of applicants
  final CollectionReference applicants =
      FirebaseFirestore.instance.collection('applicants');

  // add new applicants
  Future<void> createApplicants(
    String? applyTo,
    String? checkApplyToData,
    String? differentGrade,
    String? gender,
    String? maritalStatus,
    String? childRelease,
    String? custodyCopies,
    String? familyOthersWhoTakeCare,
    String? otherSchoolAtend,
    String? otherSchoolForeignLanguage,
    String? otherSchoolMayContact,
    String? otherSchoolSpecialEducation,
    String? feeSettleAnnually,
    String? devComNoRequests,
    String? devComNonVerbally,
    String? devComVerballySounds,
    String? devComVerballySingleWords,
    String? devComCompleteSentences,
    String? otherSchoolDisciplineAction,
    String? otherSchoolHomeSchooled,
    String? childName,
    String? childGFatherName,
    String? childCitizenship,
    String? dateOfBirth,
    String? ageOnAugust,
    String? divorcedName,
    String? divorcedRelationship,
    String? childArea,
    String? childSubCity,
    String? childHouseNo,
    String? emergencyName,
    String? emergencyChildRelation,
    String? emergencyPhoneNo,
    String? fatherFirstName,
    String? fatherFatherName,
    String? fatherCitizenship,
    String? fatherEmployer,
    String? fatherJobTitle,
    String? fatherEmail,
    String? fatherMobileTel,
    String? fatherWorkTel,
    String? motherFirstName,
    String? motherFatherName,
    String? motherCitizenship,
    String? motherEmployer,
    String? motherJobTitle,
    String? motherEmail,
    String? motherMobileTel,
    String? motherWorkTel,
    String? siblingsAge,
    String? familyOtherCareName,
    String? familyCareHowOften,
    String? familyRegularlySpoken,
    String? familyReadingLanguage,
    String? otherSchoolName,
    String? otherSchoolAddress,
    String? otherSchoolGradeLevel,
    String? otherSchoolLanguage,
    String? otherSchoolLanguageYears,
    String? otherSchoolMayContactNo,
    String? otherSchoolSpecialEducationYes,
    String? otherSchoolWhyLeave,
    String? devShareWithOthersNo,
    String? devParticipateInAGroupNo,
    String? devShortAttentionSpanYes,
    String? devSpeakPrimaryLanguageNo,
    String? devMedRequireSupportYes,
    String? devMedDietaryRestrictionsYes,
    String? devMedDiagnosedSupportYes,
    String? devMedDiagnosedLearningYes,
    String? devMedDiagnosedPhysicalYes,
    String? devMedDiagnosedBehavioralYes,
    String? devMedDiagnosedEmotionalYes,
    String? devMedDiagnosedSpeechYes,
    String? devMedDiagnosedSocialYes,
    String? devMedDiagnosedVisionYes,
    String? devMedDiagnosedSeizuresEpilepsyYes,
    String? devMedDiagnosedOther,
    String? devSpecialTalents,
    String? devAfterschoolActivity,
    String? devDescribeChild,
    String? devExampleSupport,
    String? detailsWhereFoundSchool,
    String? detailsWhyChooseSchool,
    String? detailsHopeToGainInSchool,
    String? devSitAlone,
    String? devWalkAlone,
    String? devSaySingleWords,
    String? devSpeakSentences,
    String? devHoldOwnCup,
    String? devFeedSelfWithSpoon,
    String? devEyeContactSpeakNo,
    String? devFollowDirectionsNo,
    String? devDifferentInstructionsNo,
    String? devSpeechUnderstandableNo,
    String? devFavoriteToys,
    String? devActivityAvoids,
    String? otherSchoolDisciplineActionYes,
    String? otherSchoolHomeSchooledYes,
    String? devMedReferredEduPsychologistYes,
    String? devMedAttentionDeficitYes,
    String? devMostFavoriteSubject,
    String? devLeastFavoriteSubject,
    String? devRegulateEmotions,
    String? devConcernForOthers,
    String? devShareWithOthers,
    String? devParticipateInAGroup,
    String? devIsCurious,
    String? devPersevere,
    String? devWorkIndependently,
    String? devFocusOnOneTask,
    String? devCommunicateIdeas,
    String? devCriticalThinking,
    String? devShortAttentionSpan,
    String? devMedRequireSupport,
    String? devMedDietaryRestrictions,
    String? devMedDiagnosedSupport,
    String? devMedDiagnosedLearning,
    String? devMedDiagnosedPhysical,
    String? devMedDiagnosedBehavioral,
    String? devMedDiagnosedEmotional,
    String? devMedDiagnosedSpeech,
    String? devMedDiagnosedSocial,
    String? devMedDiagnosedVision,
    String? devMedDiagnosedSeizuresEpilepsy,
    String? devEmotionallyMatured,
    String? devRelateWithPeers,
    String? devRelationshipWithAdults,
    String? devToiletTrained,
    String? devDressThemselves,
    String? devFeedThemselves,
    String? devWashHandsByThemselves,
    String? devPlayPretend,
    String? devKnowTheirName,
    String? devKnowFatherName,
    String? devKnowMotherName,
    String? devKnowGender,
    String? devKnowAge,
    String? devSpeakSoundsPrimaryLanguage,
    String? devAfraidToSpeak,
    String? devEyeContactSpeak,
    String? devFollowDirections,
    String? devDifferentInstructions,
    String? devSpeechUnderstandable,
    String? devSpeakPrimaryLanguage,
    String? devAfraidSpeakPublic,
    String? devMedReferredEduPsychologist,
    String? devMedAttentionDeficit,
  ) {
    return applicants.add({
      'userEmail': user!.email,
      'applyTo': applyTo,
      'checkApplyToData': checkApplyToData,
      'differentGrade': differentGrade,
      'gender': gender,
      'maritalStatus': maritalStatus,
      'childRelease': childRelease,
      'custodyCopies': custodyCopies,
      'familyOthersWhoTakeCare': familyOthersWhoTakeCare,
      'otherSchoolAtend': otherSchoolAtend,
      'otherSchoolForeignLanguage': otherSchoolForeignLanguage,
      'otherSchoolMayContact': otherSchoolMayContact,
      'otherSchoolSpecialEducation': otherSchoolSpecialEducation,
      'feeSettleAnnually': feeSettleAnnually,
      'devComNoRequests': devComNoRequests,
      'devComNonVerbally': devComNonVerbally,
      'devComVerballySounds': devComVerballySounds,
      'devComVerballySingleWords': devComVerballySingleWords,
      'devComCompleteSentences': devComCompleteSentences,
      'otherSchoolDisciplineAction': otherSchoolDisciplineAction,
      'otherSchoolHomeSchooled': otherSchoolHomeSchooled,
      'childName': childName,
      'childGFatherName': childGFatherName,
      'childCitizenship': childCitizenship,
      'dateOfBirth': dateOfBirth,
      'ageOnAugust': ageOnAugust,
      'divorcedName': divorcedName,
      'divorcedRelationship': divorcedRelationship,
      'childArea': childArea,
      'childSubCity': childSubCity,
      'childHouseNo': childHouseNo,
      'emergencyName': emergencyName,
      'emergencyChildRelation': emergencyChildRelation,
      'emergencyPhoneNo': emergencyPhoneNo,
      'fatherFirstName': fatherFirstName,
      'fatherFatherName': fatherFatherName,
      'fatherCitizenship': fatherCitizenship,
      'fatherEmployer': fatherEmployer,
      'fatherJobTitle': fatherJobTitle,
      'fatherEmail': fatherEmail,
      'fatherMobileTel': fatherMobileTel,
      'fatherWorkTel': fatherWorkTel,
      'motherFirstName': motherFirstName,
      'motherFatherName': motherFatherName,
      'motherCitizenship': motherCitizenship,
      'motherEmployer': motherEmployer,
      'motherJobTitle': motherJobTitle,
      'motherEmail': motherEmail,
      'motherMobileTel': motherMobileTel,
      'motherWorkTel': motherWorkTel,
      'siblingsAge': siblingsAge,
      'familyOtherCareName': familyOtherCareName,
      'familyCareHowOften': familyCareHowOften,
      'familyRegularlySpoken': familyRegularlySpoken,
      'familyReadingLanguage': familyReadingLanguage,
      'otherSchoolName': otherSchoolName,
      'otherSchoolAddress': otherSchoolAddress,
      'otherSchoolGradeLevel': otherSchoolGradeLevel,
      'otherSchoolLanguage': otherSchoolLanguage,
      'otherSchoolLanguageYears': otherSchoolLanguageYears,
      'otherSchoolMayContactNo': otherSchoolMayContactNo,
      'otherSchoolSpecialEducationYes': otherSchoolSpecialEducationYes,
      'otherSchoolWhyLeave': otherSchoolWhyLeave,
      'devShareWithOthersNo': devShareWithOthersNo,
      'devParticipateInAGroupNo': devParticipateInAGroupNo,
      'devShortAttentionSpanYes': devShortAttentionSpanYes,
      'devSpeakPrimaryLanguageNo': devSpeakPrimaryLanguageNo,
      'devMedRequireSupportYes': devMedRequireSupportYes,
      'devMedDietaryRestrictionsYes': devMedDietaryRestrictionsYes,
      'devMedDiagnosedSupportYes': devMedDiagnosedSupportYes,
      'devMedDiagnosedLearningYes': devMedDiagnosedLearningYes,
      'devMedDiagnosedPhysicalYes': devMedDiagnosedPhysicalYes,
      'devMedDiagnosedBehavioralYes': devMedDiagnosedBehavioralYes,
      'devMedDiagnosedEmotionalYes': devMedDiagnosedEmotionalYes,
      'devMedDiagnosedSpeechYes': devMedDiagnosedSpeechYes,
      'devMedDiagnosedSocialYes': devMedDiagnosedSocialYes,
      'devMedDiagnosedVisionYes': devMedDiagnosedVisionYes,
      'devMedDiagnosedSeizuresEpilepsyYes': devMedDiagnosedSeizuresEpilepsyYes,
      'devMedDiagnosedOther': devMedDiagnosedOther,
      'devSpecialTalents': devSpecialTalents,
      'devAfterschoolActivity': devAfterschoolActivity,
      'devDescribeChild': devDescribeChild,
      'devExampleSupport': devExampleSupport,
      'detailsWhereFoundSchool': detailsWhereFoundSchool,
      'detailsWhyChooseSchool': detailsWhyChooseSchool,
      'detailsHopeToGainInSchool': detailsHopeToGainInSchool,
      'devSitAlone': devSitAlone,
      'devWalkAlone': devWalkAlone,
      'devSaySingleWords': devSaySingleWords,
      'devSpeakSentences': devSpeakSentences,
      'devHoldOwnCup': devHoldOwnCup,
      'devFeedSelfWithSpoon': devFeedSelfWithSpoon,
      'devEyeContactSpeakNo': devEyeContactSpeakNo,
      'devFollowDirectionsNo': devFollowDirectionsNo,
      'devDifferentInstructionsNo': devDifferentInstructionsNo,
      'devSpeechUnderstandableNo': devSpeechUnderstandableNo,
      'devFavoriteToys': devFavoriteToys,
      'devActivityAvoids': devActivityAvoids,
      'otherSchoolDisciplineActionYes': otherSchoolDisciplineActionYes,
      'otherSchoolHomeSchooledYes': otherSchoolHomeSchooledYes,
      'devMedReferredEduPsychologistYes': devMedReferredEduPsychologistYes,
      'devMedAttentionDeficitYes': devMedAttentionDeficitYes,
      'devMostFavoriteSubject': devMostFavoriteSubject,
      'devLeastFavoriteSubject': devLeastFavoriteSubject,
      'devRegulateEmotions': devRegulateEmotions,
      'devConcernForOthers': devConcernForOthers,
      'devShareWithOthers': devShareWithOthers,
      'devParticipateInAGroup': devParticipateInAGroup,
      'devIsCurious': devIsCurious,
      'devPersevere': devPersevere,
      'devWorkIndependently': devWorkIndependently,
      'devFocusOnOneTask': devFocusOnOneTask,
      'devCommunicateIdeas': devCommunicateIdeas,
      'devCriticalThinking': devCriticalThinking,
      'devShortAttentionSpan': devShortAttentionSpan,
      'devMedRequireSupport': devMedRequireSupport,
      'devMedDietaryRestrictions': devMedDietaryRestrictions,
      'devMedDiagnosedSupport': devMedDiagnosedSupport,
      'devMedDiagnosedLearning': devMedDiagnosedLearning,
      'devMedDiagnosedPhysical': devMedDiagnosedPhysical,
      'devMedDiagnosedBehavioral': devMedDiagnosedBehavioral,
      'devMedDiagnosedEmotional': devMedDiagnosedEmotional,
      'devMedDiagnosedSpeech': devMedDiagnosedSpeech,
      'devMedDiagnosedSocial': devMedDiagnosedSocial,
      'devMedDiagnosedVision': devMedDiagnosedVision,
      'devMedDiagnosedSeizuresEpilepsy': devMedDiagnosedSeizuresEpilepsy,
      'devEmotionallyMatured': devEmotionallyMatured,
      'devRelateWithPeers': devRelateWithPeers,
      'devRelationshipWithAdults': devRelationshipWithAdults,
      'devToiletTrained': devToiletTrained,
      'devDressThemselves': devDressThemselves,
      'devFeedThemselves': devFeedThemselves,
      'devWashHandsByThemselves': devWashHandsByThemselves,
      'devPlayPretend': devPlayPretend,
      'devKnowTheirName': devKnowTheirName,
      'devKnowFatherName': devKnowFatherName,
      'devKnowMotherName': devKnowMotherName,
      'devKnowGender': devKnowGender,
      'devKnowAge': devKnowAge,
      'devSpeakSoundsPrimaryLanguage': devSpeakSoundsPrimaryLanguage,
      'devAfraidToSpeak': devAfraidToSpeak,
      'devEyeContactSpeak': devEyeContactSpeak,
      'devFollowDirections': devFollowDirections,
      'devDifferentInstructions': devDifferentInstructions,
      'devSpeechUnderstandable': devSpeechUnderstandable,
      'devSpeakPrimaryLanguage': devSpeakPrimaryLanguage,
      'devAfraidSpeakPublic': devAfraidSpeakPublic,
      'devMedReferredEduPsychologist': devMedReferredEduPsychologist,
      'devMedAttentionDeficit': devMedAttentionDeficit,
      'TimeStamp': Timestamp.now(),
    });
  }

  // update applicants document
  Future<void> updateApplicants(
    String? docID,
    String? applyTo,
    String? checkApplyToData,
    String? differentGrade,
    String? gender,
    String? maritalStatus,
    String? childRelease,
    String? custodyCopies,
    String? familyOthersWhoTakeCare,
    String? otherSchoolAtend,
    String? otherSchoolForeignLanguage,
    String? otherSchoolMayContact,
    String? otherSchoolSpecialEducation,
    String? feeSettleAnnually,
    String? devComNoRequests,
    String? devComNonVerbally,
    String? devComVerballySounds,
    String? devComVerballySingleWords,
    String? devComCompleteSentences,
    String? otherSchoolDisciplineAction,
    String? otherSchoolHomeSchooled,
    String? childName,
    String? childGFatherName,
    String? childCitizenship,
    String? dateOfBirth,
    String? ageOnAugust,
    String? divorcedName,
    String? divorcedRelationship,
    String? childArea,
    String? childSubCity,
    String? childHouseNo,
    String? emergencyName,
    String? emergencyChildRelation,
    String? emergencyPhoneNo,
    String? fatherFirstName,
    String? fatherFatherName,
    String? fatherCitizenship,
    String? fatherEmployer,
    String? fatherJobTitle,
    String? fatherEmail,
    String? fatherMobileTel,
    String? fatherWorkTel,
    String? motherFirstName,
    String? motherFatherName,
    String? motherCitizenship,
    String? motherEmployer,
    String? motherJobTitle,
    String? motherEmail,
    String? motherMobileTel,
    String? motherWorkTel,
    String? siblingsAge,
    String? familyOtherCareName,
    String? familyCareHowOften,
    String? familyRegularlySpoken,
    String? familyReadingLanguage,
    String? otherSchoolName,
    String? otherSchoolAddress,
    String? otherSchoolGradeLevel,
    String? otherSchoolLanguage,
    String? otherSchoolLanguageYears,
    String? otherSchoolMayContactNo,
    String? otherSchoolSpecialEducationYes,
    String? otherSchoolWhyLeave,
    String? devShareWithOthersNo,
    String? devParticipateInAGroupNo,
    String? devShortAttentionSpanYes,
    String? devSpeakPrimaryLanguageNo,
    String? devMedRequireSupportYes,
    String? devMedDietaryRestrictionsYes,
    String? devMedDiagnosedSupportYes,
    String? devMedDiagnosedLearningYes,
    String? devMedDiagnosedPhysicalYes,
    String? devMedDiagnosedBehavioralYes,
    String? devMedDiagnosedEmotionalYes,
    String? devMedDiagnosedSpeechYes,
    String? devMedDiagnosedSocialYes,
    String? devMedDiagnosedVisionYes,
    String? devMedDiagnosedSeizuresEpilepsyYes,
    String? devMedDiagnosedOther,
    String? devSpecialTalents,
    String? devAfterschoolActivity,
    String? devDescribeChild,
    String? devExampleSupport,
    String? detailsWhereFoundSchool,
    String? detailsWhyChooseSchool,
    String? detailsHopeToGainInSchool,
    String? devSitAlone,
    String? devWalkAlone,
    String? devSaySingleWords,
    String? devSpeakSentences,
    String? devHoldOwnCup,
    String? devFeedSelfWithSpoon,
    String? devEyeContactSpeakNo,
    String? devFollowDirectionsNo,
    String? devDifferentInstructionsNo,
    String? devSpeechUnderstandableNo,
    String? devFavoriteToys,
    String? devActivityAvoids,
    String? otherSchoolDisciplineActionYes,
    String? otherSchoolHomeSchooledYes,
    String? devMedReferredEduPsychologistYes,
    String? devMedAttentionDeficitYes,
    String? devMostFavoriteSubject,
    String? devLeastFavoriteSubject,
    String? devRegulateEmotions,
    String? devConcernForOthers,
    String? devShareWithOthers,
    String? devParticipateInAGroup,
    String? devIsCurious,
    String? devPersevere,
    String? devWorkIndependently,
    String? devFocusOnOneTask,
    String? devCommunicateIdeas,
    String? devCriticalThinking,
    String? devShortAttentionSpan,
    String? devMedRequireSupport,
    String? devMedDietaryRestrictions,
    String? devMedDiagnosedSupport,
    String? devMedDiagnosedLearning,
    String? devMedDiagnosedPhysical,
    String? devMedDiagnosedBehavioral,
    String? devMedDiagnosedEmotional,
    String? devMedDiagnosedSpeech,
    String? devMedDiagnosedSocial,
    String? devMedDiagnosedVision,
    String? devMedDiagnosedSeizuresEpilepsy,
    String? devEmotionallyMatured,
    String? devRelateWithPeers,
    String? devRelationshipWithAdults,
    String? devToiletTrained,
    String? devDressThemselves,
    String? devFeedThemselves,
    String? devWashHandsByThemselves,
    String? devPlayPretend,
    String? devKnowTheirName,
    String? devKnowFatherName,
    String? devKnowMotherName,
    String? devKnowGender,
    String? devKnowAge,
    String? devSpeakSoundsPrimaryLanguage,
    String? devAfraidToSpeak,
    String? devEyeContactSpeak,
    String? devFollowDirections,
    String? devDifferentInstructions,
    String? devSpeechUnderstandable,
    String? devSpeakPrimaryLanguage,
    String? devAfraidSpeakPublic,
    String? devMedReferredEduPsychologist,
    String? devMedAttentionDeficit,
  ) {
    return applicants.doc(docID).update({
      'applyTo': applyTo,
      'checkApplyToData': checkApplyToData,
      'differentGrade': differentGrade,
      'gender': gender,
      'maritalStatus': maritalStatus,
      'childRelease': childRelease,
      'custodyCopies': custodyCopies,
      'familyOthersWhoTakeCare': familyOthersWhoTakeCare,
      'otherSchoolAtend': otherSchoolAtend,
      'otherSchoolForeignLanguage': otherSchoolForeignLanguage,
      'otherSchoolMayContact': otherSchoolMayContact,
      'otherSchoolSpecialEducation': otherSchoolSpecialEducation,
      'feeSettleAnnually': feeSettleAnnually,
      'devComNoRequests': devComNoRequests,
      'devComNonVerbally': devComNonVerbally,
      'devComVerballySounds': devComVerballySounds,
      'devComVerballySingleWords': devComVerballySingleWords,
      'devComCompleteSentences': devComCompleteSentences,
      'otherSchoolDisciplineAction': otherSchoolDisciplineAction,
      'otherSchoolHomeSchooled': otherSchoolHomeSchooled,
      'childName': childName,
      'childGFatherName': childGFatherName,
      'childCitizenship': childCitizenship,
      'dateOfBirth': dateOfBirth,
      'ageOnAugust': ageOnAugust,
      'divorcedName': divorcedName,
      'divorcedRelationship': divorcedRelationship,
      'childArea': childArea,
      'childSubCity': childSubCity,
      'childHouseNo': childHouseNo,
      'emergencyName': emergencyName,
      'emergencyChildRelation': emergencyChildRelation,
      'emergencyPhoneNo': emergencyPhoneNo,
      'fatherFirstName': fatherFirstName,
      'fatherFatherName': fatherFatherName,
      'fatherCitizenship': fatherCitizenship,
      'fatherEmployer': fatherEmployer,
      'fatherJobTitle': fatherJobTitle,
      'fatherEmail': fatherEmail,
      'fatherMobileTel': fatherMobileTel,
      'fatherWorkTel': fatherWorkTel,
      'motherFirstName': motherFirstName,
      'motherFatherName': motherFatherName,
      'motherCitizenship': motherCitizenship,
      'motherEmployer': motherEmployer,
      'motherJobTitle': motherJobTitle,
      'motherEmail': motherEmail,
      'motherMobileTel': motherMobileTel,
      'motherWorkTel': motherWorkTel,
      'siblingsAge': siblingsAge,
      'familyOtherCareName': familyOtherCareName,
      'familyCareHowOften': familyCareHowOften,
      'familyRegularlySpoken': familyRegularlySpoken,
      'familyReadingLanguage': familyReadingLanguage,
      'otherSchoolName': otherSchoolName,
      'otherSchoolAddress': otherSchoolAddress,
      'otherSchoolGradeLevel': otherSchoolGradeLevel,
      'otherSchoolLanguage': otherSchoolLanguage,
      'otherSchoolLanguageYears': otherSchoolLanguageYears,
      'otherSchoolMayContactNo': otherSchoolMayContactNo,
      'otherSchoolSpecialEducationYes': otherSchoolSpecialEducationYes,
      'otherSchoolWhyLeave': otherSchoolWhyLeave,
      'devShareWithOthersNo': devShareWithOthersNo,
      'devParticipateInAGroupNo': devParticipateInAGroupNo,
      'devShortAttentionSpanYes': devShortAttentionSpanYes,
      'devSpeakPrimaryLanguageNo': devSpeakPrimaryLanguageNo,
      'devMedRequireSupportYes': devMedRequireSupportYes,
      'devMedDietaryRestrictionsYes': devMedDietaryRestrictionsYes,
      'devMedDiagnosedSupportYes': devMedDiagnosedSupportYes,
      'devMedDiagnosedLearningYes': devMedDiagnosedLearningYes,
      'devMedDiagnosedPhysicalYes': devMedDiagnosedPhysicalYes,
      'devMedDiagnosedBehavioralYes': devMedDiagnosedBehavioralYes,
      'devMedDiagnosedEmotionalYes': devMedDiagnosedEmotionalYes,
      'devMedDiagnosedSpeechYes': devMedDiagnosedSpeechYes,
      'devMedDiagnosedSocialYes': devMedDiagnosedSocialYes,
      'devMedDiagnosedVisionYes': devMedDiagnosedVisionYes,
      'devMedDiagnosedSeizuresEpilepsyYes': devMedDiagnosedSeizuresEpilepsyYes,
      'devMedDiagnosedOther': devMedDiagnosedOther,
      'devSpecialTalents': devSpecialTalents,
      'devAfterschoolActivity': devAfterschoolActivity,
      'devDescribeChild': devDescribeChild,
      'devExampleSupport': devExampleSupport,
      'detailsWhereFoundSchool': detailsWhereFoundSchool,
      'detailsWhyChooseSchool': detailsWhyChooseSchool,
      'detailsHopeToGainInSchool': detailsHopeToGainInSchool,
      'devSitAlone': devSitAlone,
      'devWalkAlone': devWalkAlone,
      'devSaySingleWords': devSaySingleWords,
      'devSpeakSentences': devSpeakSentences,
      'devHoldOwnCup': devHoldOwnCup,
      'devFeedSelfWithSpoon': devFeedSelfWithSpoon,
      'devEyeContactSpeakNo': devEyeContactSpeakNo,
      'devFollowDirectionsNo': devFollowDirectionsNo,
      'devDifferentInstructionsNo': devDifferentInstructionsNo,
      'devSpeechUnderstandableNo': devSpeechUnderstandableNo,
      'devFavoriteToys': devFavoriteToys,
      'devActivityAvoids': devActivityAvoids,
      'otherSchoolDisciplineActionYes': otherSchoolDisciplineActionYes,
      'otherSchoolHomeSchooledYes': otherSchoolHomeSchooledYes,
      'devMedReferredEduPsychologistYes': devMedReferredEduPsychologistYes,
      'devMedAttentionDeficitYes': devMedAttentionDeficitYes,
      'devMostFavoriteSubject': devMostFavoriteSubject,
      'devLeastFavoriteSubject': devLeastFavoriteSubject,
      'devRegulateEmotions': devRegulateEmotions,
      'devConcernForOthers': devConcernForOthers,
      'devShareWithOthers': devShareWithOthers,
      'devParticipateInAGroup': devParticipateInAGroup,
      'devIsCurious': devIsCurious,
      'devPersevere': devPersevere,
      'devWorkIndependently': devWorkIndependently,
      'devFocusOnOneTask': devFocusOnOneTask,
      'devCommunicateIdeas': devCommunicateIdeas,
      'devCriticalThinking': devCriticalThinking,
      'devShortAttentionSpan': devShortAttentionSpan,
      'devMedRequireSupport': devMedRequireSupport,
      'devMedDietaryRestrictions': devMedDietaryRestrictions,
      'devMedDiagnosedSupport': devMedDiagnosedSupport,
      'devMedDiagnosedLearning': devMedDiagnosedLearning,
      'devMedDiagnosedPhysical': devMedDiagnosedPhysical,
      'devMedDiagnosedBehavioral': devMedDiagnosedBehavioral,
      'devMedDiagnosedEmotional': devMedDiagnosedEmotional,
      'devMedDiagnosedSpeech': devMedDiagnosedSpeech,
      'devMedDiagnosedSocial': devMedDiagnosedSocial,
      'devMedDiagnosedVision': devMedDiagnosedVision,
      'devMedDiagnosedSeizuresEpilepsy': devMedDiagnosedSeizuresEpilepsy,
      'devEmotionallyMatured': devEmotionallyMatured,
      'devRelateWithPeers': devRelateWithPeers,
      'devRelationshipWithAdults': devRelationshipWithAdults,
      'devToiletTrained': devToiletTrained,
      'devDressThemselves': devDressThemselves,
      'devFeedThemselves': devFeedThemselves,
      'devWashHandsByThemselves': devWashHandsByThemselves,
      'devPlayPretend': devPlayPretend,
      'devKnowTheirName': devKnowTheirName,
      'devKnowFatherName': devKnowFatherName,
      'devKnowMotherName': devKnowMotherName,
      'devKnowGender': devKnowGender,
      'devKnowAge': devKnowAge,
      'devSpeakSoundsPrimaryLanguage': devSpeakSoundsPrimaryLanguage,
      'devAfraidToSpeak': devAfraidToSpeak,
      'devEyeContactSpeak': devEyeContactSpeak,
      'devFollowDirections': devFollowDirections,
      'devDifferentInstructions': devDifferentInstructions,
      'devSpeechUnderstandable': devSpeechUnderstandable,
      'devSpeakPrimaryLanguage': devSpeakPrimaryLanguage,
      'devAfraidSpeakPublic': devAfraidSpeakPublic,
      'devMedReferredEduPsychologist': devMedReferredEduPsychologist,
      'devMedAttentionDeficit': devMedAttentionDeficit,
      'TimeStamp': Timestamp.now(),
    });
  }

  Future<void> deteteApplicants(String docID) {
    return applicants.doc(docID).delete();
  }

  // get all applicants for a single user
  Stream<QuerySnapshot> getApplicantsStream() {
    User? user = FirebaseAuth.instance.currentUser;
    final applicantsStream = FirebaseFirestore.instance
        .collection('applicants')
        .where('userEmail', isEqualTo: user!.email)
        .snapshots();

    return applicantsStream;
  }

  // get a single document from a single user
  Future<DocumentSnapshot?> getApplicantById(String? docID) async {
    // Get a reference to the specific document using the docId
    final docRef =
        FirebaseFirestore.instance.collection('applicants').doc(docID);

    try {
      // Get the document snapshot
      final docSnapshot = await docRef.get();

      // Check if the document exists
      if (docSnapshot.exists) {
        return docSnapshot;
      } else {
        print('No document found with ID: $docID');
        return null; // Or throw an exception if desired
      }
    } catch (error) {
      print('Error fetching document: $error');
      return null; // Or throw an exception if desired
    }
  }
}
